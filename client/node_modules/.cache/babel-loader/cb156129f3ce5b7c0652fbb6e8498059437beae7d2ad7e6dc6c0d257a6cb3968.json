{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HIMANSHU SINGH\\\\Downloads\\\\pdf-co-viewer\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport PDFViewer from './components/PDFViewer';\nimport socket from './socket';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [pdfFile, setPdfFile] = useState(null);\n  useEffect(() => {\n    // Listen for admin status\n    socket.on('set-admin', adminStatus => {\n      setIsAdmin(adminStatus);\n    });\n\n    // Listen for uploaded PDF path\n    socket.on('pdf-uploaded', filePath => {\n      setPdfFile(filePath);\n    });\n    return () => {\n      socket.off('set-admin');\n      socket.off('pdf-uploaded');\n    };\n  }, []);\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    const formData = new FormData();\n    formData.append('pdf', file);\n    fetch('http://localhost:3000/upload', {\n      method: 'POST',\n      body: formData\n    }).then(res => res.json()).then(data => {\n      if (data.success) {\n        setPdfFile(data.filePath); // Set PDF file path for admin view\n      }\n    }).catch(err => console.error('Error uploading PDF:', err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Real-Time PDF Co-Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), isAdmin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"application/pdf\",\n        onChange: handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), pdfFile && /*#__PURE__*/_jsxDEV(PDFViewer, {\n        pdfFile: pdfFile,\n        isAdmin: isAdmin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: pdfFile ? /*#__PURE__*/_jsxDEV(PDFViewer, {\n        pdfFile: pdfFile,\n        isAdmin: isAdmin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Waiting for PDF upload...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 84\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"MeclW0NOkO9U2czjn9LYTVconKk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PDFViewer","socket","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isAdmin","setIsAdmin","pdfFile","setPdfFile","on","adminStatus","filePath","off","handleFileUpload","event","file","target","files","formData","FormData","append","fetch","method","body","then","res","json","data","success","catch","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","_c","$RefreshReg$"],"sources":["C:/Users/HIMANSHU SINGH/Downloads/pdf-co-viewer/client/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport PDFViewer from './components/PDFViewer';\nimport socket from './socket';\nimport './App.css';\n\nconst App = () => {\n    const [isAdmin, setIsAdmin] = useState(false);\n    const [pdfFile, setPdfFile] = useState(null);\n\n    useEffect(() => {\n        // Listen for admin status\n        socket.on('set-admin', (adminStatus) => {\n            setIsAdmin(adminStatus);\n        });\n\n        // Listen for uploaded PDF path\n        socket.on('pdf-uploaded', (filePath) => {\n            setPdfFile(filePath);\n        });\n\n        return () => {\n            socket.off('set-admin');\n            socket.off('pdf-uploaded');\n        };\n    }, []);\n\n    const handleFileUpload = (event) => {\n        const file = event.target.files[0];\n        const formData = new FormData();\n        formData.append('pdf', file);\n\n        fetch('http://localhost:3000/upload', {\n            method: 'POST',\n            body: formData,\n        })\n            .then((res) => res.json())\n            .then((data) => {\n                if (data.success) {\n                    setPdfFile(data.filePath);  // Set PDF file path for admin view\n                }\n            })\n            .catch((err) => console.error('Error uploading PDF:', err));\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Real-Time PDF Co-Viewer</h1>\n            {isAdmin ? (\n                <>\n                    <input type=\"file\" accept=\"application/pdf\" onChange={handleFileUpload} />\n                    {pdfFile && <PDFViewer pdfFile={pdfFile} isAdmin={isAdmin} />}\n                </>\n            ) : (\n                <>\n                    {pdfFile ? <PDFViewer pdfFile={pdfFile} isAdmin={isAdmin} /> : <p>Waiting for PDF upload...</p>}\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}