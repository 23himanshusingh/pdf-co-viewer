{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HIMANSHU SINGH\\\\Downloads\\\\pdf-co-viewer\\\\client\\\\src\\\\components\\\\PDFViewer.js\",\n  _s = $RefreshSig$();\n// client/src/components/PDFViewer.js\nimport React, { useEffect, useState, useContext } from 'react';\nimport { Document, Page } from 'react-pdf';\nimport { SocketContext } from '../context/SocketContext';\nimport AdminControls from './AdminControls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PDFViewer = ({\n  isAdmin\n}) => {\n  _s();\n  const [pageNumber, setPageNumber] = useState(1);\n  const [numPages, setNumPages] = useState(null);\n  const socket = useContext(SocketContext);\n  const onDocumentLoadSuccess = ({\n    numPages\n  }) => setNumPages(numPages);\n  const changePage = offset => {\n    const newPage = pageNumber + offset;\n    if (newPage >= 1 && newPage <= numPages) {\n      setPageNumber(newPage);\n      if (isAdmin) socket.emit('pageChange', newPage);\n    }\n  };\n  useEffect(() => {\n    if (!isAdmin) {\n      socket.on('pageUpdate', newPage => setPageNumber(newPage));\n    }\n  }, [socket, isAdmin]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Document, {\n      file: \"sample.pdf\",\n      onLoadSuccess: onDocumentLoadSuccess,\n      children: /*#__PURE__*/_jsxDEV(Page, {\n        pageNumber: pageNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Page \", pageNumber, \" of \", numPages]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), isAdmin && /*#__PURE__*/_jsxDEV(AdminControls, {\n      pageNumber: pageNumber,\n      numPages: numPages,\n      changePage: changePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(PDFViewer, \"IRoZAimUlb2VPvqsjqAHYDKdPQA=\");\n_c = PDFViewer;\nexport default PDFViewer;\nvar _c;\n$RefreshReg$(_c, \"PDFViewer\");","map":{"version":3,"names":["React","useEffect","useState","useContext","Document","Page","SocketContext","AdminControls","jsxDEV","_jsxDEV","PDFViewer","isAdmin","_s","pageNumber","setPageNumber","numPages","setNumPages","socket","onDocumentLoadSuccess","changePage","offset","newPage","emit","on","children","file","onLoadSuccess","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HIMANSHU SINGH/Downloads/pdf-co-viewer/client/src/components/PDFViewer.js"],"sourcesContent":["// client/src/components/PDFViewer.js\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport { Document, Page } from 'react-pdf';\r\nimport { SocketContext } from '../context/SocketContext';\r\nimport AdminControls from './AdminControls';\r\n\r\nconst PDFViewer = ({ isAdmin }) => {\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [numPages, setNumPages] = useState(null);\r\n  const socket = useContext(SocketContext);\r\n\r\n  const onDocumentLoadSuccess = ({ numPages }) => setNumPages(numPages);\r\n\r\n  const changePage = (offset) => {\r\n    const newPage = pageNumber + offset;\r\n    if (newPage >= 1 && newPage <= numPages) {\r\n      setPageNumber(newPage);\r\n      if (isAdmin) socket.emit('pageChange', newPage);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isAdmin) {\r\n      socket.on('pageUpdate', (newPage) => setPageNumber(newPage));\r\n    }\r\n  }, [socket, isAdmin]);\r\n\r\n  return (\r\n    <div>\r\n      <Document file=\"sample.pdf\" onLoadSuccess={onDocumentLoadSuccess}>\r\n        <Page pageNumber={pageNumber} />\r\n      </Document>\r\n      <p>Page {pageNumber} of {numPages}</p>\r\n      {isAdmin && (\r\n        <AdminControls\r\n          pageNumber={pageNumber}\r\n          numPages={numPages}\r\n          changePage={changePage}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PDFViewer;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,QAAQ,EAAEC,IAAI,QAAQ,WAAW;AAC1C,SAASC,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAMe,MAAM,GAAGd,UAAU,CAACG,aAAa,CAAC;EAExC,MAAMY,qBAAqB,GAAGA,CAAC;IAAEH;EAAS,CAAC,KAAKC,WAAW,CAACD,QAAQ,CAAC;EAErE,MAAMI,UAAU,GAAIC,MAAM,IAAK;IAC7B,MAAMC,OAAO,GAAGR,UAAU,GAAGO,MAAM;IACnC,IAAIC,OAAO,IAAI,CAAC,IAAIA,OAAO,IAAIN,QAAQ,EAAE;MACvCD,aAAa,CAACO,OAAO,CAAC;MACtB,IAAIV,OAAO,EAAEM,MAAM,CAACK,IAAI,CAAC,YAAY,EAAED,OAAO,CAAC;IACjD;EACF,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACd,IAAI,CAACU,OAAO,EAAE;MACZM,MAAM,CAACM,EAAE,CAAC,YAAY,EAAGF,OAAO,IAAKP,aAAa,CAACO,OAAO,CAAC,CAAC;IAC9D;EACF,CAAC,EAAE,CAACJ,MAAM,EAAEN,OAAO,CAAC,CAAC;EAErB,oBACEF,OAAA;IAAAe,QAAA,gBACEf,OAAA,CAACL,QAAQ;MAACqB,IAAI,EAAC,YAAY;MAACC,aAAa,EAAER,qBAAsB;MAAAM,QAAA,eAC/Df,OAAA,CAACJ,IAAI;QAACQ,UAAU,EAAEA;MAAW;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACXrB,OAAA;MAAAe,QAAA,GAAG,OAAK,EAACX,UAAU,EAAC,MAAI,EAACE,QAAQ;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrCnB,OAAO,iBACNF,OAAA,CAACF,aAAa;MACZM,UAAU,EAAEA,UAAW;MACvBE,QAAQ,EAAEA,QAAS;MACnBI,UAAU,EAAEA;IAAW;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CApCIF,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AAsCf,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}