{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HIMANSHU SINGH\\\\Downloads\\\\pdf-co-viewer\\\\client\\\\src\\\\Admin.js\",\n  _s = $RefreshSig$();\n// frontend/src/Admin.js\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:4000'); // Adjust the URL if needed\n\nconst Admin = () => {\n  _s();\n  const [pdfFile, setPdfFile] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isAdmin, setIsAdmin] = useState(false);\n  useEffect(() => {\n    socket.on('role', role => {\n      if (role === 'admin') {\n        setIsAdmin(true);\n      }\n    });\n    return () => {\n      socket.off('role');\n    };\n  }, []);\n  const handleFileChange = e => {\n    setPdfFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('pdf', pdfFile);\n    await fetch('http://localhost:4000/upload', {\n      method: 'POST',\n      body: formData\n    });\n  };\n  const changePage = page => {\n    setCurrentPage(page);\n    socket.emit('changePage', page); // Notify the viewers\n  };\n  if (!isAdmin) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"You are not authorized to access the admin panel.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"application/pdf\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changePage(currentPage - 1),\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changePage(currentPage + 1),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(Admin, \"+JIGv9cM9zmOcC66kOnnmJ8V3w4=\");\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","Admin","_s","pdfFile","setPdfFile","currentPage","setCurrentPage","isAdmin","setIsAdmin","on","role","off","handleFileChange","e","target","files","handleUpload","formData","FormData","append","fetch","method","body","changePage","page","emit","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","accept","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/HIMANSHU SINGH/Downloads/pdf-co-viewer/client/src/Admin.js"],"sourcesContent":["// frontend/src/Admin.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\n\r\nconst socket = io('http://localhost:4000'); // Adjust the URL if needed\r\n\r\nconst Admin = () => {\r\n    const [pdfFile, setPdfFile] = useState(null);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n    useEffect(() => {\r\n        socket.on('role', (role) => {\r\n            if (role === 'admin') {\r\n                setIsAdmin(true);\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            socket.off('role');\r\n        };\r\n    }, []);\r\n\r\n    const handleFileChange = (e) => {\r\n        setPdfFile(e.target.files[0]);\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        const formData = new FormData();\r\n        formData.append ('pdf', pdfFile);\r\n\r\n        await fetch('http://localhost:4000/upload', {\r\n            method: 'POST',\r\n            body: formData,\r\n        });\r\n    };\r\n\r\n    const changePage = (page) => {\r\n        setCurrentPage(page);\r\n        socket.emit('changePage', page); // Notify the viewers\r\n    };\r\n\r\n    if (!isAdmin) {\r\n        return <div>You are not authorized to access the admin panel.</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"admin\">\r\n            <h1>Admin Panel</h1>\r\n            <input type=\"file\" accept=\"application/pdf\" onChange={handleFileChange} />\r\n            <button onClick={handleUpload}>Upload PDF</button>\r\n            <div className=\"controls\">\r\n                <button onClick={() => changePage(currentPage - 1)} disabled={currentPage === 1}>Previous</button>\r\n                <span>Page {currentPage}</span>\r\n                <button onClick={() => changePage(currentPage + 1)}>Next</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Admin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}