{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HIMANSHU SINGH\\\\Downloads\\\\pdf-co-viewer\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// client/src/App.js\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\n\n// Connect to the backend (assuming it runs on localhost:5000)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nfunction App() {\n  _s();\n  const [pageNumber, setPageNumber] = useState(1); // Track the current page\n  const [numPages, setNumPages] = useState(10); // Total number of pages\n  const [isAdmin, setIsAdmin] = useState(false); // Whether the user is an admin or viewer\n\n  // Synchronize the page with the server\n  useEffect(() => {\n    // Listen for the page synchronization message when the viewer connects\n    socket.on('syncPage', ({\n      page\n    }) => {\n      setPageNumber(page); // Update the page number based on admin's current page\n    });\n\n    // Listen for page changes emitted by the admin\n    socket.on('slideChange', newPage => {\n      setPageNumber(newPage); // Update the page number for viewers\n    });\n    return () => {\n      socket.off('syncPage');\n      socket.off('slideChange');\n    };\n  }, []);\n\n  // Admin Controls (Previous and Next buttons)\n  const handlePrevious = () => {\n    if (pageNumber > 1) {\n      const newPageNumber = pageNumber - 1;\n      setPageNumber(newPageNumber);\n      socket.emit('changeSlide', newPageNumber); // Emit to the server for synchronization\n    }\n  };\n  const handleNext = () => {\n    if (pageNumber < numPages) {\n      const newPageNumber = pageNumber + 1;\n      setPageNumber(newPageNumber);\n      socket.emit('changeSlide', newPageNumber); // Emit to the server for synchronization\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Co-Viewer Page Synchronization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevious,\n        disabled: pageNumber <= 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [pageNumber, \" of \", numPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        disabled: pageNumber >= numPages,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isAdmin,\n          onChange: e => setIsAdmin(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), \"Admin Mode\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Current Page: \", pageNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1Vnan/iY4d4J/G+79Uq/eHz5PKs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","App","_s","pageNumber","setPageNumber","numPages","setNumPages","isAdmin","setIsAdmin","on","page","newPage","off","handlePrevious","newPageNumber","emit","handleNext","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","type","checked","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/HIMANSHU SINGH/Downloads/pdf-co-viewer/client/src/App.js"],"sourcesContent":["// client/src/App.js\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\n\n// Connect to the backend (assuming it runs on localhost:5000)\nconst socket = io('http://localhost:5000');\n\nfunction App() {\n  const [pageNumber, setPageNumber] = useState(1);  // Track the current page\n  const [numPages, setNumPages] = useState(10);     // Total number of pages\n  const [isAdmin, setIsAdmin] = useState(false);     // Whether the user is an admin or viewer\n\n  // Synchronize the page with the server\n  useEffect(() => {\n    // Listen for the page synchronization message when the viewer connects\n    socket.on('syncPage', ({ page }) => {\n      setPageNumber(page);  // Update the page number based on admin's current page\n    });\n\n    // Listen for page changes emitted by the admin\n    socket.on('slideChange', (newPage) => {\n      setPageNumber(newPage);  // Update the page number for viewers\n    });\n\n    return () => {\n      socket.off('syncPage');\n      socket.off('slideChange');\n    };\n  }, []);\n\n  // Admin Controls (Previous and Next buttons)\n  const handlePrevious = () => {\n    if (pageNumber > 1) {\n      const newPageNumber = pageNumber - 1;\n      setPageNumber(newPageNumber);\n      socket.emit('changeSlide', newPageNumber);  // Emit to the server for synchronization\n    }\n  };\n\n  const handleNext = () => {\n    if (pageNumber < numPages) {\n      const newPageNumber = pageNumber + 1;\n      setPageNumber(newPageNumber);\n      socket.emit('changeSlide', newPageNumber);  // Emit to the server for synchronization\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Co-Viewer Page Synchronization</h1>\n\n      {/* Admin controls */}\n      {isAdmin && (\n        <div>\n          <button onClick={handlePrevious} disabled={pageNumber <= 1}>\n            Previous\n          </button>\n          <span>{pageNumber} of {numPages}</span>\n          <button onClick={handleNext} disabled={pageNumber >= numPages}>\n            Next\n          </button>\n        </div>\n      )}\n\n      {/* Toggle Admin Mode */}\n      <div>\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={isAdmin}\n            onChange={(e) => setIsAdmin(e.target.checked)}\n          />\n          Admin Mode\n        </label>\n      </div>\n\n      {/* Display the current page */}\n      <div>\n        <h2>Current Page: {pageNumber}</h2>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}