{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HIMANSHU SINGH\\\\Downloads\\\\pdf-co-viewer\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PDFViewer from './components/PDFViewer';\nimport AdminControls from './components/AdminControls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [pdfUrl, setPdfUrl] = useState(null);\n  const [isAdmin, setIsAdmin] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"PDF Co-Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsAdmin(!isAdmin),\n      children: isAdmin ? 'Switch to Viewer' : 'Switch to Admin'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), pdfUrl ? /*#__PURE__*/_jsxDEV(PDFViewer, {\n      pdfUrl: pdfUrl,\n      isAdmin: isAdmin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(AdminControls, {\n      setPdfUrl: setPdfUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0maUtzFVctctf1Bjmlo60lu7AQ0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PDFViewer","AdminControls","jsxDEV","_jsxDEV","App","_s","pdfUrl","setPdfUrl","isAdmin","setIsAdmin","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HIMANSHU SINGH/Downloads/pdf-co-viewer/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PDFViewer from './components/PDFViewer';\nimport AdminControls from './components/AdminControls';\n\nfunction App() {\n  const [pdfUrl, setPdfUrl] = useState(null);\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  return (\n    <div>\n      <h1>PDF Co-Viewer</h1>\n      <button onClick={() => setIsAdmin(!isAdmin)}>\n        {isAdmin ? 'Switch to Viewer' : 'Switch to Admin'}\n      </button>\n      {pdfUrl ? (\n        <PDFViewer pdfUrl={pdfUrl} isAdmin={isAdmin} />\n      ) : (\n        <AdminControls setPdfUrl={setPdfUrl} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE7C,oBACEI,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBX,OAAA;MAAQY,OAAO,EAAEA,CAAA,KAAMN,UAAU,CAAC,CAACD,OAAO,CAAE;MAAAE,QAAA,EACzCF,OAAO,GAAG,kBAAkB,GAAG;IAAiB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,EACRR,MAAM,gBACLH,OAAA,CAACH,SAAS;MAACM,MAAM,EAAEA,MAAO;MAACE,OAAO,EAAEA;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE/CX,OAAA,CAACF,aAAa;MAACM,SAAS,EAAEA;IAAU;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACvC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACT,EAAA,CAjBQD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAmBZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}