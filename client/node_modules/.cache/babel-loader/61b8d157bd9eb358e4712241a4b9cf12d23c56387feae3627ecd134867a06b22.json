{"ast":null,"code":"const handleFileUpload = async e => {\n  const file = e.target.files[0];\n  const formData = new FormData();\n  formData.append('pdf', file);\n  try {\n    const response = await fetch('http://localhost:5000/upload', {\n      method: 'POST',\n      body: formData\n    });\n    if (!response.ok) {\n      throw new Error('Failed to upload file');\n    }\n    const data = await response.json();\n    setPdfUrl(data.url);\n  } catch (error) {\n    console.error(\"Error uploading file:\", error);\n  }\n};","map":{"version":3,"names":["handleFileUpload","e","file","target","files","formData","FormData","append","response","fetch","method","body","ok","Error","data","json","setPdfUrl","url","error","console"],"sources":["C:/Users/HIMANSHU SINGH/Downloads/pdf-co-viewer/client/src/components/AdminControls.js"],"sourcesContent":["const handleFileUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('pdf', file);\r\n  \r\n    try {\r\n      const response = await fetch('http://localhost:5000/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error('Failed to upload file');\r\n      }\r\n  \r\n      const data = await response.json();\r\n      setPdfUrl(data.url);\r\n    } catch (error) {\r\n      console.error(\"Error uploading file:\", error);\r\n    }\r\n  };\r\n  "],"mappings":"AAAA,MAAMA,gBAAgB,GAAG,MAAOC,CAAC,IAAK;EAClC,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAC9B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,KAAK,EAAEL,IAAI,CAAC;EAE5B,IAAI;IACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;MAC3DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN;IACR,CAAC,CAAC;IAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1C;IAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAClCC,SAAS,CAACF,IAAI,CAACG,GAAG,CAAC;EACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;EAC/C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}