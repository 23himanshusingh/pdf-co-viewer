{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HIMANSHU SINGH\\\\Downloads\\\\pdf-co-viewer\\\\client\\\\src\\\\components\\\\PDFViewer.js\",\n  _s = $RefreshSig$();\n// client/src/components/PDFViewer.js\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport { SocketContext } from '../context/SocketContext';\nimport AdminControls from './AdminControls';\n\n// Set the worker source for PDF.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\nconst PDFViewer = ({\n  isAdmin\n}) => {\n  _s();\n  const [pageNumber, setPageNumber] = useState(1);\n  const [numPages, setNumPages] = useState(null);\n  const [pdfFile, setPdfFile] = useState(null); // Track the uploaded PDF file\n  const socket = useContext(SocketContext);\n  const onDocumentLoadSuccess = ({\n    numPages\n  }) => {\n    setNumPages(numPages);\n  };\n  const changePage = offset => {\n    const newPage = pageNumber + offset;\n    if (newPage >= 1 && newPage <= numPages) {\n      setPageNumber(newPage);\n      if (isAdmin) socket.emit('pageChange', newPage);\n    }\n  };\n  const handleUpload = file => {\n    setPdfFile(URL.createObjectURL(file));\n    setPageNumber(1); // Reset to page 1 after uploading new PDF\n  };\n  useEffect(() => {\n    if (!isAdmin) {\n      socket.on('pageUpdate', newPage => setPageNumber(newPage));\n    }\n  }, [socket, isAdmin]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"viewer-container\",\n    children: [pdfFile ? /*#__PURE__*/_jsxDEV(Document, {\n      file: pdfFile,\n      onLoadSuccess: onDocumentLoadSuccess,\n      children: /*#__PURE__*/_jsxDEV(Page, {\n        pageNumber: pageNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No PDF file uploaded. Please upload a PDF to start viewing.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"page-info\",\n      children: [\"Page \", pageNumber, \" of \", numPages]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), isAdmin && /*#__PURE__*/_jsxDEV(AdminControls, {\n      pageNumber: pageNumber,\n      numPages: numPages,\n      changePage: changePage,\n      onUpload: handleUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(PDFViewer, \"Rte/QuYZD/wZVsj3lkPoelP2lmI=\");\n_c = PDFViewer;\nexport default PDFViewer;\nvar _c;\n$RefreshReg$(_c, \"PDFViewer\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Document","Page","pdfjs","SocketContext","AdminControls","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","PDFViewer","isAdmin","_s","pageNumber","setPageNumber","numPages","setNumPages","pdfFile","setPdfFile","socket","onDocumentLoadSuccess","changePage","offset","newPage","emit","handleUpload","file","URL","createObjectURL","on","className","children","onLoadSuccess","fileName","_jsxFileName","lineNumber","columnNumber","onUpload","_c","$RefreshReg$"],"sources":["C:/Users/HIMANSHU SINGH/Downloads/pdf-co-viewer/client/src/components/PDFViewer.js"],"sourcesContent":["// client/src/components/PDFViewer.js\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { Document, Page, pdfjs } from 'react-pdf';\r\nimport { SocketContext } from '../context/SocketContext';\r\nimport AdminControls from './AdminControls';\r\n\r\n// Set the worker source for PDF.js\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\r\n\r\nconst PDFViewer = ({ isAdmin }) => {\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pdfFile, setPdfFile] = useState(null); // Track the uploaded PDF file\r\n  const socket = useContext(SocketContext);\r\n\r\n  const onDocumentLoadSuccess = ({ numPages }) => {\r\n    setNumPages(numPages);\r\n  };\r\n\r\n  const changePage = (offset) => {\r\n    const newPage = pageNumber + offset;\r\n    if (newPage >= 1 && newPage <= numPages) {\r\n      setPageNumber(newPage);\r\n      if (isAdmin) socket.emit('pageChange', newPage);\r\n    }\r\n  };\r\n\r\n  const handleUpload = (file) => {\r\n    setPdfFile(URL.createObjectURL(file));\r\n    setPageNumber(1); // Reset to page 1 after uploading new PDF\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isAdmin) {\r\n      socket.on('pageUpdate', (newPage) => setPageNumber(newPage));\r\n    }\r\n  }, [socket, isAdmin]);\r\n\r\n  return (\r\n    <div className=\"viewer-container\">\r\n      {pdfFile ? (\r\n        <Document file={pdfFile} onLoadSuccess={onDocumentLoadSuccess}>\r\n          <Page pageNumber={pageNumber} />\r\n        </Document>\r\n      ) : (\r\n        <p>No PDF file uploaded. Please upload a PDF to start viewing.</p>\r\n      )}\r\n      <p className=\"page-info\">Page {pageNumber} of {numPages}</p>\r\n      {isAdmin && (\r\n        <AdminControls\r\n          pageNumber={pageNumber}\r\n          numPages={numPages}\r\n          changePage={changePage}\r\n          onUpload={handleUpload}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PDFViewer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}