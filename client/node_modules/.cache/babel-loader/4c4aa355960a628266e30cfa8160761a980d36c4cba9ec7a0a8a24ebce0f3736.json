{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HIMANSHU SINGH\\\\Downloads\\\\pdf-co-viewer\\\\client\\\\src\\\\components\\\\AdminControls.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminControls = ({\n  setPdfUrl,\n  socket\n}) => {\n  _s();\n  const [pageNum, setPageNum] = useState(1);\n  const handleFileUpload = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('pdf', file);\n    try {\n      const response = await fetch('http://localhost:5000/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Failed to upload file');\n      }\n      const data = await response.json();\n      setPdfUrl(data.url); // Use setPdfUrl to set the PDF URL for viewing\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n    }\n  };\n  const handlePageChange = newPageNum => {\n    setPageNum(newPageNum);\n    socket.emit('page-change', newPageNum); // Emit page number change to all viewers\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(pageNum - 1),\n        disabled: pageNum <= 1,\n        children: \"Previous Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(pageNum + 1),\n        children: \"Next Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminControls, \"HDYOMUAR6UNoRZgn1xeFUfR0Ljg=\");\n_c = AdminControls;\nexport default AdminControls;\nvar _c;\n$RefreshReg$(_c, \"AdminControls\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AdminControls","setPdfUrl","socket","_s","pageNum","setPageNum","handleFileUpload","e","file","target","files","formData","FormData","append","response","fetch","method","body","ok","Error","data","json","url","error","console","handlePageChange","newPageNum","emit","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/HIMANSHU SINGH/Downloads/pdf-co-viewer/client/src/components/AdminControls.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AdminControls = ({ setPdfUrl, socket }) => {\r\n  const [pageNum, setPageNum] = useState(1);\r\n\r\n  const handleFileUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('pdf', file);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to upload file');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setPdfUrl(data.url);  // Use setPdfUrl to set the PDF URL for viewing\r\n    } catch (error) {\r\n      console.error(\"Error uploading file:\", error);\r\n    }\r\n  };\r\n\r\n  const handlePageChange = (newPageNum) => {\r\n    setPageNum(newPageNum);\r\n    socket.emit('page-change', newPageNum);  // Emit page number change to all viewers\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" onChange={handleFileUpload} />\r\n      <div>\r\n        <button onClick={() => handlePageChange(pageNum - 1)} disabled={pageNum <= 1}>Previous Page</button>\r\n        <button onClick={() => handlePageChange(pageNum + 1)}>Next Page</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminControls;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAEzC,MAAMS,gBAAgB,GAAG,MAAOC,CAAC,IAAK;IACpC,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,KAAK,EAAEL,IAAI,CAAC;IAE5B,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QAC3DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1C;MAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClCpB,SAAS,CAACmB,IAAI,CAACE,GAAG,CAAC,CAAC,CAAE;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,MAAME,gBAAgB,GAAIC,UAAU,IAAK;IACvCrB,UAAU,CAACqB,UAAU,CAAC;IACtBxB,MAAM,CAACyB,IAAI,CAAC,aAAa,EAAED,UAAU,CAAC,CAAC,CAAE;EAC3C,CAAC;EAED,oBACE3B,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MAAO8B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAExB;IAAiB;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjDnC,OAAA;MAAA6B,QAAA,gBACE7B,OAAA;QAAQoC,OAAO,EAAEA,CAAA,KAAMV,gBAAgB,CAACrB,OAAO,GAAG,CAAC,CAAE;QAACgC,QAAQ,EAAEhC,OAAO,IAAI,CAAE;QAAAwB,QAAA,EAAC;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpGnC,OAAA;QAAQoC,OAAO,EAAEA,CAAA,KAAMV,gBAAgB,CAACrB,OAAO,GAAG,CAAC,CAAE;QAAAwB,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAvCIH,aAAa;AAAAqC,EAAA,GAAbrC,aAAa;AAyCnB,eAAeA,aAAa;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}